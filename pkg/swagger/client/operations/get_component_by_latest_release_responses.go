package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-swagger/go-swagger/client"
	"github.com/go-swagger/go-swagger/httpkit"

	strfmt "github.com/go-swagger/go-swagger/strfmt"

	"github.com/deis/workflow-manager/pkg/swagger/models"
)

// GetComponentByLatestReleaseReader is a Reader for the GetComponentByLatestRelease structure.
type GetComponentByLatestReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the recieved o.
func (o *GetComponentByLatestReleaseReader) ReadResponse(response client.Response, consumer httpkit.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetComponentByLatestReleaseOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		result := NewGetComponentByLatestReleaseDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	}
}

// NewGetComponentByLatestReleaseOK creates a GetComponentByLatestReleaseOK with default headers values
func NewGetComponentByLatestReleaseOK() *GetComponentByLatestReleaseOK {
	return &GetComponentByLatestReleaseOK{}
}

/*GetComponentByLatestReleaseOK handles this case with default header values.

component latest release response
*/
type GetComponentByLatestReleaseOK struct {
	Payload *models.ComponentDetail
}

func (o *GetComponentByLatestReleaseOK) Error() string {
	return fmt.Sprintf("[GET /versions/{train}/{component}/latest][%d] getComponentByLatestReleaseOK  %+v", 200, o.Payload)
}

func (o *GetComponentByLatestReleaseOK) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ComponentDetail)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetComponentByLatestReleaseDefault creates a GetComponentByLatestReleaseDefault with default headers values
func NewGetComponentByLatestReleaseDefault(code int) *GetComponentByLatestReleaseDefault {
	return &GetComponentByLatestReleaseDefault{
		_statusCode: code,
	}
}

/*GetComponentByLatestReleaseDefault handles this case with default header values.

unexpected error
*/
type GetComponentByLatestReleaseDefault struct {
	_statusCode int

	Payload *models.Error
}

// Code gets the status code for the get component by latest release default response
func (o *GetComponentByLatestReleaseDefault) Code() int {
	return o._statusCode
}

func (o *GetComponentByLatestReleaseDefault) Error() string {
	return fmt.Sprintf("[GET /versions/{train}/{component}/latest][%d] getComponentByLatestRelease default  %+v", o._statusCode, o.Payload)
}

func (o *GetComponentByLatestReleaseDefault) readResponse(response client.Response, consumer httpkit.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
